using BrsTgBot.Services.Interfaces;
using Telegram.Bot;
using Telegram.Bot.Types;
using Telegram.Bot.Types.Enums;
using Telegram.Bot.Types.ReplyMarkups;

namespace BrsTgBot.Services;

public class TelegramService(ILogger<TelegramService> logger, ITelegramBotClient botClient) : ITelegramService
{
    public async Task SendNewMainMenuAsync(Message message, CancellationToken cancellationToken)
    {
        logger.LogInformation("Sending main menu");

        InlineKeyboardMarkup keyboard = new(new[]
        {
            new[]
            {
                InlineKeyboardButton.WithCallbackData("–ë–†–° üìä", "brs_menu"),
                InlineKeyboardButton.WithCallbackData("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è", "settings_menu")
            },
            new[]
            {
                InlineKeyboardButton.WithUrl("–û –ø—Ä–æ–µ–∫—Ç–µ", "https://github.com/yakovlev05/BrsUrFUBot-Telegram")
            }
        });

        await botClient.SendTextMessageAsync(
            message.Chat.Id,
            $@"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, *{message.Chat.FirstName}*\! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏\.",
            cancellationToken: cancellationToken,
            replyMarkup: keyboard,
            parseMode: ParseMode.MarkdownV2);
    }

    public async Task SendBrsMenuAsync(Message message, CancellationToken cancellationToken)
    {
        logger.LogInformation("Sending answer brs menu");

        InlineKeyboardMarkup keyboard = new(new[]
        {
            new[]
            {
                InlineKeyboardButton.WithCallbackData("–û–±–Ω–æ–≤–∏—Ç—å üí°", "brs_update"),
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üö™", "main_menu")
            }
        });

        await botClient.EditMessageTextAsync(
            message.Chat.Id,
            message.MessageId,
            "–¢–µ—Å—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –±—Ä—Å",
            cancellationToken: cancellationToken,
            replyMarkup: keyboard);
    }

    public async Task SendSettingsMenuAsync(Message message, CancellationToken cancellationToken)
    {
        logger.LogInformation("Sending settings menu");

        InlineKeyboardMarkup keyboard = new(new[]
        {
            new[]
            {
                InlineKeyboardButton.WithCallbackData("–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ üîë", "settings_update_auth")
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç üö©", "settings_remove_account")
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üö™", "main_menu"),
            }
        });

        await botClient.EditMessageTextAsync(
            message.Chat.Id,
            message.MessageId,
            "–¢–µ—Å—Ç –æ—Ç–≤–µ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
            cancellationToken: cancellationToken,
            replyMarkup: keyboard);
    }

    public async Task SendMainMenuAsync(Message message, CancellationToken cancellationToken)
    {
        logger.LogInformation("Sending main menu");

        InlineKeyboardMarkup keyboard = new(new[]
        {
            new[]
            {
                InlineKeyboardButton.WithCallbackData("–ë–†–° üìä", "brs_menu"),
                InlineKeyboardButton.WithCallbackData("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è", "settings_menu")
            },
            new[]
            {
                InlineKeyboardButton.WithUrl("–û –ø—Ä–æ–µ–∫—Ç–µ", "https://github.com/yakovlev05/BrsUrFUBot-Telegram")
            }
        });

        await botClient.EditMessageTextAsync(
            message.Chat.Id,
            message.MessageId,
            $@"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, *{message.Chat.FirstName}*\! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏\.",
            cancellationToken: cancellationToken,
            replyMarkup: keyboard,
            parseMode: ParseMode.MarkdownV2);
    }

    public async Task SendBrsUpdateAsync(Message message, CancellationToken cancellationToken)
    {
        logger.LogInformation("Updating brs menu");

        InlineKeyboardMarkup keyboard = new(new[]
        {
            new[]
            {
                InlineKeyboardButton.WithCallbackData("–û–±–Ω–æ–≤–∏—Ç—å üí°", "brs_update"),
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üö™", "main_menu")
            }
        });

        await botClient.EditMessageTextAsync(
            message.Chat.Id,
            message.MessageId,
            "–ë—Ä—Å –±—ã–ª –æ–±–Ω–æ–≤–ª—ë–Ω",
            cancellationToken: cancellationToken,
            replyMarkup: keyboard);
    }

    public async Task SendSettingsUpdateAuthAsync(Message message, CancellationToken cancellationToken)
    {
        logger.LogInformation("Sending settings update auth");

        InlineKeyboardMarkup keyboard = new(new[]
        {
            InlineKeyboardButton.WithCallbackData("–û—Ç–º–µ–Ω–∞ ‚ùå", "settings_update_auth_cancel")
        });

        await botClient.EditMessageTextAsync(
            message.Chat.Id,
            message.MessageId,
            "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å",
            cancellationToken: cancellationToken,
            replyMarkup: keyboard);
    }

    public async Task SendSettingsDeleteAccountQuestionAsync(Message message, CancellationToken cancellationToken)
    {
        logger.LogInformation("Sending settings delete account question");

        InlineKeyboardMarkup keyboard = new(new[]
        {
            new[]
            {
                InlineKeyboardButton.WithCallbackData("–î–∞ ‚úÖ", "settings_delete_account_question_confirm"),
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("–ù–µ—Ç ‚ùå", "settings_delete_account_question_cancel")
            }
        });

        await botClient.EditMessageTextAsync(
            message.Chat.Id,
            message.MessageId,
            "‚ùó–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç? \n –í—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ –±—É–¥—É—Ç —Å—Ç—ë—Ä—Ç—ã —Å –Ω–∞—à–∏—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤üíø",
            cancellationToken: cancellationToken,
            replyMarkup: keyboard);
    }

    public async Task SendErrorMessageAsync(long chatId, string text, CancellationToken cancellationToken)
    {
        var baseText = "‚ÄºÔ∏è–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: \n";

        await botClient.SendTextMessageAsync(
            chatId,
            baseText + text,
            cancellationToken: cancellationToken);
    }
}